import 'dart:convert' show Converter, utf8, ClosableStringSink;

import 'package:jsontool/jsontool.dart' as lrhn;
import 'package:json_alt/shared_things.dart';
import 'package:json_annotation/json_annotation.dart';

// Code generated by existing `pkg:json_serializable`
part 'example.g.dart';

// Code to align with Lasse's impl
part 'example.lrhn.dart';

// Code that "could" be generated by a future generator
part 'example.to_gen.dart';

@JsonSerializable()
class Example {
  final int a;
  final String b;
  final bool c;
  final Example child;
  final List<Example> nestedList;
  final Map<String, Example> nestedMap;
  final List<DateTime> dateList;

  Object random;

  Example({
    this.a,
    this.b,
    this.c,
    this.nestedList,
    this.dateList,
    this.child,
    this.nestedMap,
  });

  factory Example.fromJson(Map<String, dynamic> json) =>
      _$ExampleFromJson(json);

  Map<String, dynamic> toJson() => _$ExampleToJson(this);

  static bool writeJson(Object object, JsonWriter writer) =>
      _$writeExample(object, writer);

  static JsonReader<Example> createReader() =>
      createCustomJsonReader(_$ExampleObjectReader());
}
